<?xml version="1.0" encoding="UTF-8"?>
<exercises permid="exers_sec-logic" xmlns:xi="http://www.w3.org/2001/XInclude" xml:id="exercises_sec-logic">

  <exercise permid="exers_sec-logic-e_xo">
    <statement>
      <p permid="exers_sec-logic-e_xo-p1">
        Consider the statement about a party,
        <q>If it's your birthday or there will be cake,
        then there will be cake.</q>
      </p>

      <p permid="exers_sec-logic-e_xo-p2">
        <ol permid="exers_sec-logic-e_xo-ol">
          <li permid="exers_sec-logic-e_xo-ol-l_j">
            <p permid="exers_sec-logic-e_xo-ol-l_j-p">
              Translate the above statement into symbols.
              Clearly state which statement is <m>P</m> and which is <m>Q</m>.
            </p>
          </li>

          <li permid="exers_sec-logic-e_xo-ol-l_s">
            <p permid="exers_sec-logic-e_xo-ol-l_s-p">
              Make a truth table for the statement.
            </p>
          </li>

          <li permid="exers_sec-logic-e_xo-ol-l_b">
            <p permid="exers_sec-logic-e_xo-ol-l_b-p">
              Assuming the statement is true, what
              (if anything)
              can you conclude if there will be cake?
            </p>
          </li>

          <li permid="exers_sec-logic-e_xo-ol-l_k">
            <p permid="exers_sec-logic-e_xo-ol-l_k-p">
              Assuming the statement is true, what
              (if anything)
              can you conclude if there will not be cake?
            </p>
          </li>

          <li permid="exers_sec-logic-e_xo-ol-l_t">
            <p permid="exers_sec-logic-e_xo-ol-l_t-p">
              Suppose you found out that the statement was a lie.
              What can you conclude?
            </p>
          </li>
        </ol>
      </p>
    </statement>
    <solution permid="exers_sec-logic-e_xo-s">
      <p permid="exers_sec-logic-e_xo-s-p">
        <ol permid="exers_sec-logic-e_xo-s-ol">
          <li permid="exers_sec-logic-e_xo-s-ol-l_j">
            <m>P</m>: it's your birthday; <m>Q</m>:
            there will be cake. <m>(P \vee Q) \imp Q</m>
          </li>

          <li permid="exers_sec-logic-e_xo-s-ol-l_s">
            <p permid="exers_sec-logic-e_xo-s-ol-l_s-p">
              Hint: you should get three T's and one F.
            </p>
          </li>

          <li permid="exers_sec-logic-e_xo-s-ol-l_b">
            <p permid="exers_sec-logic-e_xo-s-ol-l_b-p">
              Only that there will be cake.
            </p>
          </li>

          <li permid="exers_sec-logic-e_xo-s-ol-l_k">
            <p permid="exers_sec-logic-e_xo-s-ol-l_k-p">
              It's NOT your birthday!
            </p>
          </li>

          <li permid="exers_sec-logic-e_xo-s-ol-l_t">
            <p permid="exers_sec-logic-e_xo-s-ol-l_t-p">
              It's your birthday, but the cake is a lie.
            </p>
          </li>
        </ol>
      </p>
    </solution>
  </exercise>

  <exercise permid="exers_sec-logic-e_ag">
    <statement>
      <p permid="exers_sec-logic-e_ag-p">
        Make a truth table for the statement <m>(P \vee Q) \imp (P \wedge Q)</m>.
      </p>
    </statement>
    <solution permid="exers_sec-logic-e_ag-s">
      <sidebyside permid="exers_sec-logic-sbs1">

        <tabular halign="center">
          <col right="minor"/>
          <col right="medium"/>
          <col/>
          <row bottom="minor">
            <cell><m>P</m></cell>
            <cell><m>Q</m></cell>
            <cell><m>(P \vee Q) \imp (P \wedge Q)</m></cell>
          </row>
          <row>
            <cell>T</cell>
            <cell>T</cell>
            <cell>T</cell>
          </row>
          <row>
            <cell>T</cell>
            <cell>F</cell>
            <cell>F</cell>
          </row>
          <row>
            <cell>F</cell>
            <cell>T</cell>
            <cell>F</cell>
          </row>
          <row>
            <cell>F</cell>
            <cell>F</cell>
            <cell>T</cell>
          </row>
        </tabular>

      </sidebyside>
    </solution>
  </exercise>

  <exercise permid="exers_sec-logic-e_dp">
    <statement>
      <p permid="exers_sec-logic-e_dp-p">
        Make a truth table for the statement <m>\neg P \wedge (Q \imp P)</m>.
        What can you conclude about <m>P</m> and <m>Q</m> if you know the statement is true?
      </p>
    </statement>
    <solution permid="exers_sec-logic-e_dp-s">
      <sidebyside permid="exers_sec-logic-sbs2">

        <tabular halign="center">
          <col right="minor"/>
          <col right="medium"/>
          <col/>
          <row bottom="minor">
            <cell><m>P</m></cell>
            <cell><m>Q</m></cell>
            <cell><m>\neg P \wedge (Q \imp P)</m></cell>
          </row>
          <row>
            <cell>T</cell>
            <cell>T</cell>
            <cell>F</cell>
          </row>
          <row>
            <cell>T</cell>
            <cell>F</cell>
            <cell>F</cell>
          </row>
          <row>
            <cell>F</cell>
            <cell>T</cell>
            <cell>F</cell>
          </row>
          <row>
            <cell>F</cell>
            <cell>F</cell>
            <cell>T</cell>
          </row>
        </tabular>

      </sidebyside>

      <p permid="exers_sec-logic-e_dp-s-p">
        If the statement is true, then both <m>P</m> and <m>Q</m> are false.
      </p>
    </solution>
  </exercise>

  <exercise permid="exers_sec-logic-e_gy">
    <statement>
      <p permid="exers_sec-logic-e_gy-p">
        Make a truth table for the statement <m>\neg P \imp (Q \wedge R)</m>.
      </p>
    </statement>
    <hint permid="exers_sec-logic-e_gy-h">
      <p permid="exers_sec-logic-e_gy-h-p">
        Like above, only now you will need 8 rows instead of just 4.
      </p>
    </hint>
  </exercise>

  <exercise permid="exers_sec-logic-e_jq">
    <statement>
      <p permid="exers_sec-logic-e_jq-p">
        Determine whether the following two statements are logically equivalent:
        <m>\neg(P \imp Q)</m> and <m>P \wedge \neg Q</m>.
        Explain how you know you are correct.
      </p>
    </statement>
    <solution permid="exers_sec-logic-e_jq-s">
      <p permid="exers_sec-logic-e_jq-s-p">
        Make a truth table for each and compare.
        The statements are logically equivalent.
      </p>
    </solution>
  </exercise>

  <exercise permid="exers_sec-logic-e_mz">
    <statement>
      <p permid="exers_sec-logic-e_mz-p">
        Are the statements <m>P \imp (Q\vee R)</m> and
        <m>(P \imp Q) \vee (P \imp R)</m> logically equivalent?
      </p>
    </statement>
  </exercise>

  <exercise permid="exers_sec-logic-e_pi">
    <statement>
      <p permid="exers_sec-logic-e_pi-p1">
        Simplify the following statements
        (so that negation only appears right before variables).
      </p>

      <p permid="exers_sec-logic-e_pi-p2">
        <ol permid="exers_sec-logic-e_pi-ol">
          <li permid="exers_sec-logic-e_pi-ol-l_j"><m>\neg(P \imp \neg Q)</m>.</li>

          <li permid="exers_sec-logic-e_pi-ol-l_s">
            <m>(\neg P \vee \neg Q) \imp \neg (\neg Q \wedge R)</m>.
          </li>

          <li permid="exers_sec-logic-e_pi-ol-l_b">
            <m>\neg((P \imp \neg Q) \vee \neg (R \wedge \neg R))</m>.
          </li>

          <li permid="exers_sec-logic-e_pi-ol-l_k">
            <p permid="exers_sec-logic-e_pi-ol-l_k-p">
              It is false that if Sam is not a man then Chris is a woman,
              and that Chris is not a woman.
            </p>
          </li>
        </ol>
      </p>
    </statement>
    <answer permid="exers_sec-logic-e_pi-a">
      <p permid="exers_sec-logic-e_pi-a-p">
        <ol permid="exers_sec-logic-e_pi-a-ol">
          <li permid="exers_sec-logic-e_pi-a-ol-l_j"><m>P \wedge Q</m>.</li>

          <li permid="exers_sec-logic-e_pi-a-ol-l_s">
            <m>(\neg P \vee \neg R) \imp (Q \vee \neg R)</m> or,
            replacing the implication with a disjunction first:
            <m>(P \wedge Q) \vee (Q \vee \neg R)</m>.
          </li>

          <li permid="exers_sec-logic-e_pi-a-ol-l_b">
            <p permid="exers_sec-logic-e_pi-a-ol-l_b-p">
              <m>(P \wedge Q) \wedge (R \wedge \neg R)</m>.
              This is necessarily false,
              so it is also equivalent to <m>P \wedge \neg P</m>.
            </p>
          </li>

          <li permid="exers_sec-logic-e_pi-a-ol-l_k">
            <p permid="exers_sec-logic-e_pi-a-ol-l_k-p">
              Either Sam is a woman and Chris is a man, or Chris is a woman.
            </p>
          </li>
        </ol>
      </p>
    </answer>
  </exercise>

  <exercise permid="exers_sec-logic-e_sa">
    <statement>
      <p permid="exers_sec-logic-e_sa-p1">
        Use De Morgan's Laws,
        and any other logical equivalence facts you know to simplify the following statements.
        Show all your steps.
        Your final statements should have negations only appear directly next to the sentence variables or predicates (<m>P</m>,
        <m>Q</m>, <m>E(x)</m>, etc.), and no double negations.
        It would be a good idea to use only conjunctions,
        disjunctions, and negations.
      </p>

      <p permid="exers_sec-logic-e_sa-p2">
        <ol permid="exers_sec-logic-e_sa-ol">
          <li permid="exers_sec-logic-e_sa-ol-l_j">
            <m>\neg((\neg P \wedge Q) \vee \neg(R \vee \neg S))</m>.
          </li>

          <li permid="exers_sec-logic-e_sa-ol-l_s">
            <m>\neg((\neg P \imp \neg Q) \wedge (\neg Q \imp R))</m>
            (careful with the implications).
          </li>
        </ol>
      </p>
    </statement>
  </exercise>

  <exercise permid="exers_sec-logic-e_vj">
    <statement>
      <p permid="exers_sec-logic-e_vj-p1">
        Tommy Flanagan was telling you what he ate yesterday afternoon.
        He tells you, <q>I had either popcorn or raisins.
        Also, if I had cucumber sandwiches, then I had soda.
        But I didn't drink soda or tea.</q>
        Of course you know that Tommy is the worlds worst liar,
        and everything he says is false.
        What did Tommy eat?
      </p>

      <p permid="exers_sec-logic-e_vj-p2">
        Justify your answer by writing all of Tommy's statements using sentence variables (<m>P, Q, R, S, T</m>),
        taking their negations, and using these to deduce what Tommy actually ate.
      </p>
    </statement>
  </exercise>

  <exercise permid="exers_sec-logic-e_ys">
    <statement>
      <p permid="exers_sec-logic-e_ys-p">
        Determine if the following deduction rule is valid:
      </p>

      <sidebyside permid="exers_sec-logic-sbs3">

        <tabular halign="center">
          <row>
            <cell/>
            <cell><m>P \vee Q</m></cell>
          </row>
          <row bottom="minor">
            <cell/>
            <cell><m>\neg P</m></cell>
          </row>
          <row>
            <cell><m>\therefore</m></cell>
            <cell><m>Q</m></cell>
          </row>
        </tabular>

      </sidebyside>
    </statement>
    <solution permid="exers_sec-logic-e_ys-s">
      <p permid="exers_sec-logic-e_ys-s-p">
        The deduction rule is valid.
        To see this,
        make a truth table which contains <m>P \vee Q</m> and <m>\neg P</m>
        (and <m>P</m> and <m>Q</m> of course).
        Look at the truth value of <m>Q</m> in each of the rows that have
        <m>P \vee Q</m> and <m>\neg P</m> true.
      </p>
    </solution>
  </exercise>

  <exercise permid="exers_sec-logic-e_bk">
    <statement>
      <p permid="exers_sec-logic-e_bk-p">
        Determine if the following is a valid deduction rule:
      </p>

      <sidebyside permid="exers_sec-logic-sbs4">

        <tabular halign="center">
          <row>
            <cell/>
            <cell><m>P \imp (Q \vee R)</m></cell>
          </row>
          <row bottom="minor">
            <cell/>
            <cell><m>\neg(P \imp Q)</m></cell>
          </row>
          <row>
            <cell><m>\therefore</m></cell>
            <cell><m>R</m></cell>
          </row>
        </tabular>

      </sidebyside>
    </statement>
  </exercise>

  <exercise permid="exers_sec-logic-e_et">
    <statement>
      <p permid="exers_sec-logic-e_et-p">
        Determine if the following is a valid deduction rule:
      </p>

      <sidebyside permid="exers_sec-logic-sbs5">

        <tabular halign="center">
          <row>
            <cell/>
            <cell><m>(P \wedge Q) \imp R</m></cell>
          </row>
          <row bottom="minor">
            <cell/>
            <cell><m>\neg P \vee \neg Q</m></cell>
          </row>
          <row>
            <cell><m>\therefore</m></cell>
            <cell><m>\neg R</m></cell>
          </row>
        </tabular>

      </sidebyside>
    </statement>
  </exercise>

  <exercise permid="exers_sec-logic-e_hc">
    <statement>
      <p permid="exers_sec-logic-e_hc-p1">
        Can you chain implications together?
        That is, if <m>P \imp Q</m> and <m>Q \imp R</m>,
        does that means the <m>P \imp R</m>?
        Can you chain more implications together?
        Let's find out:
      </p>

      <p permid="exers_sec-logic-e_hc-p2">
        <ol permid="exers_sec-logic-e_hc-ol">
          <li permid="exers_sec-logic-e_hc-ol-l_j">
            <p permid="exers_sec-logic-e_hc-ol-l_j-p">
              Prove that the following is a valid deduction rule:
            </p>

            <sidebyside permid="exers_sec-logic-sbs6">

              <tabular halign="center">
                <row>
                  <cell/>
                  <cell><m>P \imp Q</m></cell>
                </row>
                <row bottom="minor">
                  <cell/>
                  <cell><m>Q \imp R</m></cell>
                </row>
                <row>
                  <cell><m>\therefore</m></cell>
                  <cell><m>P \imp R</m></cell>
                </row>
              </tabular>

            </sidebyside>

          </li>

          <li permid="exers_sec-logic-e_hc-ol-l_s">
            <p permid="exers_sec-logic-e_hc-ol-l_s-p1">
              Prove that the following is a valid deduction rule for any <m>n \ge 2</m>:
            </p>

            <sidebyside permid="exers_sec-logic-sbs7">

              <tabular halign="center">
                <row>
                  <cell/>
                  <cell><m>P_1 \imp P_2</m></cell>
                </row>
                <row>
                  <cell/>
                  <cell><m>P_2 \imp P_3</m></cell>
                </row>
                <row>
                  <cell/>
                  <cell><m>\vdots</m></cell>
                </row>
                <row bottom="minor">
                  <cell/>
                  <cell><m>P_{n-1} \imp P_n</m></cell>
                </row>
                <row>
                  <cell><m>\therefore</m></cell>
                  <cell><m>P_1 \imp P_n</m>.</cell>
                </row>
              </tabular>

            </sidebyside>

            <p permid="exers_sec-logic-e_hc-ol-l_s-p2">
              I suggest you don't go through the trouble of writing out a <m>2^n</m> row truth table.
              Instead, you should use part (a) and mathematical induction.
            </p>
          </li>
        </ol>
      </p>
    </statement>
  </exercise>

  <exercise permid="exers_sec-logic-e_ku">
    <statement>
      <p permid="exers_sec-logic-e_ku-p1">
        We can also simplify statements in predicate logic using our rules for passing negations over quantifiers,
        and then applying propositional logical equivalence to the
        <q>inside</q> propositional part.
        Simplify the statements below
        (so negation appears only directly next to predicates).
      </p>

      <p permid="exers_sec-logic-e_ku-p2">
        <ol permid="exers_sec-logic-e_ku-ol">
          <li permid="exers_sec-logic-e_ku-ol-l_j">
            <m>\neg \exists x \forall y (\neg O(x) \vee E(y))</m>.
          </li>

          <li permid="exers_sec-logic-e_ku-ol-l_s">
            <m>\neg \forall x \neg \forall y \neg(x \lt y \wedge \exists z (x \lt z \vee y \lt z))</m>.
          </li>

          <li permid="exers_sec-logic-e_ku-ol-l_b">
            <p permid="exers_sec-logic-e_ku-ol-l_b-p">
              There is a number <m>n</m> for which no other number is either less <m>n</m> than or equal to <m>n</m>.
            </p>
          </li>

          <li permid="exers_sec-logic-e_ku-ol-l_k">
            <p permid="exers_sec-logic-e_ku-ol-l_k-p">
              It is false that for every number <m>n</m> there are two other numbers which <m>n</m> is between.
            </p>
          </li>
        </ol>
      </p>
    </statement>
    <solution permid="exers_sec-logic-e_ku-s">
      <p permid="exers_sec-logic-e_ku-s-p">
        <ol permid="exers_sec-logic-e_ku-s-ol">
          <li permid="exers_sec-logic-e_ku-s-ol-l_j">
            <m>\forall x \exists y (O(x) \wedge \neg E(y))</m>.
          </li>

          <li permid="exers_sec-logic-e_ku-s-ol-l_s">
            <m>\exists x \forall y (x \ge y \vee \forall z (x \ge z \wedge y \ge z))</m>.
          </li>

          <li permid="exers_sec-logic-e_ku-s-ol-l_b">
            <p permid="exers_sec-logic-e_ku-s-ol-l_b-p">
              There is a number <m>n</m> for which every other number is strictly greater than <m>n</m>.
            </p>
          </li>

          <li permid="exers_sec-logic-e_ku-s-ol-l_k">
            <p permid="exers_sec-logic-e_ku-s-ol-l_k-p">
              There is a number <m>n</m> which is not between any other two numbers.
            </p>
          </li>
        </ol>
      </p>
    </solution>
  </exercise>

  <exercise permid="exers_sec-logic-e_nd">
    <statement>
      <p permid="exers_sec-logic-e_nd-p">
        Suppose <m>P</m> and <m>Q</m> are
        (possibly molecular)
        propositional statements.
        Prove that <m>P</m> and <m>Q</m> are logically equivalent if any only if <m>P \iff Q</m> is a tautology.
      </p>
    </statement>
    <hint permid="exers_sec-logic-e_nd-h">
      <p permid="exers_sec-logic-e_nd-h-p">
        What do these concepts mean in terms of truth tables?
      </p>
    </hint>
  </exercise>

  <exercise permid="exers_sec-logic-e_qm">
    <statement>
      <p permid="exers_sec-logic-e_qm-p1">
        Suppose <m>P_1, P_2, \ldots, P_n</m> and <m>Q</m> are
        (possibly molecular)
        propositional statements.
        Suppose further that
      </p>

      <sidebyside permid="exers_sec-logic-sbs8">

        <tabular>
          <row>
            <cell/>
            <cell><m>P_1</m></cell>
          </row>
          <row>
            <cell/>
            <cell><m>P_2</m></cell>
          </row>
          <row>
            <cell/>
            <cell><m>\vdots</m></cell>
          </row>
          <row bottom="minor">
            <cell/>
            <cell><m>P_n</m></cell>
          </row>
          <row>
            <cell><m>\therefore</m></cell>
            <cell><m>Q</m></cell>
          </row>
        </tabular>

      </sidebyside>

      <p permid="exers_sec-logic-e_qm-p2">
        is a valid deduction rule.
        Prove that the statement
        <me permid="exers_sec-logic-e_qm-p2-me">
          (P_1 \wedge P_2 \wedge \cdots \wedge P_n) \imp Q
        </me>
        is a tautology.
      </p>
    </statement>
  </exercise>

</exercises>
