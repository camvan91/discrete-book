<?xml version="1.0" encoding="UTF-8"?>
<exercises permid="exers_seq_basics" xmlns:xi="http://www.w3.org/2001/XInclude" xml:id="exercises_seq_basics">

  <exercise permid="exers_seq_basics-e_xo">
    <statement>
      <p permid="exers_seq_basics-e_xo-p1">
        Find the closed formula for each of the following sequences by relating them to a well known sequence.
        Assume the first term given is <m>a_1</m>.
      </p>

      <ol permid="exers_seq_basics-e_xo-ol1">
        <li permid="exers_seq_basics-e_xo-ol1-l_j"><m>2, 5, 10, 17, 26, \ldots</m></li>

        <li permid="exers_seq_basics-e_xo-ol1-l_s"><m>0, 2, 5, 9, 14, 20, \ldots</m></li>

        <li permid="exers_seq_basics-e_xo-ol1-l_b"><m>8, 12, 17, 23, 30,\ldots</m></li>

        <li permid="exers_seq_basics-e_xo-ol1-l_k"><m>1, 5, 23, 119, 719,\ldots</m></li>
      </ol>
    </statement>
    <solution permid="exers_seq_basics-e_xo-s1">
      <p permid="exers_seq_basics-e_xo-s1-p1">
        <ol permid="exers_seq_basics-e_xo-s1-ol1">
          <li permid="exers_seq_basics-e_xo-s1-ol1-l_j"><m>a_n = n^2 + 1</m>.</li>

          <li permid="exers_seq_basics-e_xo-s1-ol1-l_s"><m>a_n = \frac{n(n+1)}{2} - 1</m>.</li>

          <li permid="exers_seq_basics-e_xo-s1-ol1-l_b"><m>a_n = \frac{(n+2)(n+3)}{2} + 2</m>.</li>

          <li permid="exers_seq_basics-e_xo-s1-ol1-l_k">
            <m>a_n = (n+1)! - 1</m>
            (where <m>n! = 1 \cdot 2 \cdot 3 \cdots n</m>).
          </li>
        </ol>
      </p>
    </solution>
  </exercise>

  <exercise permid="exers_seq_basics-e_ag">
    <statement>
      <p permid="exers_seq_basics-e_ag-p1">
        For each sequence given below,
        find a closed formula for <m>a_n</m>,
        the <m>n</m>th term of the sequence
        (assume the first terms are <m>a_0</m>)
        by relating it to another sequence for which you already know the formula.
        In each case, briefly say how you got your answers.
      </p>

      <ol permid="exers_seq_basics-e_ag-ol1">
        <li permid="exers_seq_basics-e_ag-ol1-l_j">
          <p permid="exers_seq_basics-e_ag-ol1-l_j-p1">
            4, 5, 7, 11, 19, 35, <ellipsis/>
          </p>
        </li>

        <li permid="exers_seq_basics-e_ag-ol1-l_s">
          <p permid="exers_seq_basics-e_ag-ol1-l_s-p1">
            0, 3, 8, 15, 24, 35, <ellipsis/>
          </p>
        </li>

        <li permid="exers_seq_basics-e_ag-ol1-l_b">
          <p permid="exers_seq_basics-e_ag-ol1-l_b-p1">
            6, 12, 20, 30, 42, <ellipsis/>
          </p>
        </li>

        <li permid="exers_seq_basics-e_ag-ol1-l_k">
          <p permid="exers_seq_basics-e_ag-ol1-l_k-p1">
            0, 2, 7, 15, 26, 40, 57, <ellipsis/> (Cryptic Hint:
            these might be called <q>house numbers</q>)
          </p>
        </li>
      </ol>
    </statement>
  </exercise>

  <exercise permid="exers_seq_basics-e_dp">
    <statement>
      <p permid="exers_seq_basics-e_dp-p1">
        The Fibonacci sequence is <m>0, 1, 1, 2, 3, 5, 8, 13, \ldots</m>
        (where <m>F_0 = 0</m>).
            <idx><h>Fibonacci sequence</h></idx>
      </p>

      <p permid="exers_seq_basics-e_dp-p2">
        <ol permid="exers_seq_basics-e_dp-ol1">
          <li permid="exers_seq_basics-e_dp-ol1-l_j">
            <p permid="exers_seq_basics-e_dp-ol1-l_j-p1">
              Give the recursive definition for the sequence.
            </p>
          </li>

          <li permid="exers_seq_basics-e_dp-ol1-l_s">
            <p permid="exers_seq_basics-e_dp-ol1-l_s-p1">
              Write out the first few terms of the sequence of partial sums:
              <m>0</m>, <m>0+1</m>, <m>0+1+1</m>,<ellipsis/>
            </p>
          </li>

          <li permid="exers_seq_basics-e_dp-ol1-l_b">
            <p permid="exers_seq_basics-e_dp-ol1-l_b-p1">
              Give a closed formula for the sequence of partial sums in terms of <m>F_n</m>

              <notation>
                <usage>F_n</usage>
                <description>the <m>n</m>th Fibonacci number</description>
              </notation>

              (for example,
              you might say <m>F_0 + F_1 + \cdots + F_n = 3F_{n-1}^2 + n</m>,
              although that is definitely not correct).
            </p>
          </li>
        </ol>
      </p>
    </statement>
    <solution permid="exers_seq_basics-e_dp-s1">
      <p permid="exers_seq_basics-e_dp-s1-p1">
        <ol permid="exers_seq_basics-e_dp-s1-ol1">
          <li permid="exers_seq_basics-e_dp-s1-ol1-l_j">
            <m>F_n = F_{n-1} + F_{n-2}</m> with <m>F_0 = 0</m> and <m>F_1 = 1</m>.
          </li>

          <li permid="exers_seq_basics-e_dp-s1-ol1-l_s"><m>0, 1, 2, 4, 7, 12, 20, \ldots</m>.</li>

          <li permid="exers_seq_basics-e_dp-s1-ol1-l_b"><m>F_0 + F_1 + \cdots + F_n = F_{n+2} - 1</m>.</li>
        </ol>
      </p>
    </solution>
  </exercise>

  <exercise permid="exers_seq_basics-e_gy">
    <statement>
      <p permid="exers_seq_basics-e_gy-p1">
        Consider the three sequences below.
        For each, find a recursive definition.
        How are these sequences related?
      </p>

      <p permid="exers_seq_basics-e_gy-p2">
        <ol permid="exers_seq_basics-e_gy-ol1">
          <li permid="exers_seq_basics-e_gy-ol1-l_j"><m>2, 4, 6, 10, 16, 26, 42, \ldots</m>.</li>

          <li permid="exers_seq_basics-e_gy-ol1-l_s"><m>5, 6, 11, 17, 28, 45, 73, \ldots</m>.</li>

          <li permid="exers_seq_basics-e_gy-ol1-l_b"><m>0, 0 , 0 , 0 , 0 , 0 , 0 ,\ldots</m>.</li>
        </ol>
      </p>
    </statement>
    <solution permid="exers_seq_basics-e_gy-s1">
      <p permid="exers_seq_basics-e_gy-s1-p1">
        The sequences all have the same recurrence relation:
        <m>a_n = a_{n-1} + a_{n-2}</m>
        (the same as the Fibonacci numbers).
        The only difference is the initial conditions.
      </p>
    </solution>
  </exercise>

  <exercise permid="exers_seq_basics-e_jq">
    <statement>
      <p permid="exers_seq_basics-e_jq-p1">
        Show that <m>a_n = 3\cdot 2^n + 7\cdot 5^n</m> is a solution to the recurrence relation <m>a_n = 7a_{n-1} - 10a_{n-2}</m>.
        What would the initial conditions need to be for this to be the closed formula for the sequence?
      </p>
    </statement>
  </exercise>

  <exercise permid="exers_seq_basics-e_mz">
    <statement>
      <p permid="exers_seq_basics-e_mz-p1">
        Write out the first few terms of the sequence given by <m>a_1 = 3</m>;
        <m>a_n = 2a_{n-1} + 4</m>.
        Then find a recursive definition for the sequence <m>10, 24, 52, 108, \ldots</m>.
      </p>
    </statement>
  </exercise>

  <exercise permid="exers_seq_basics-e_pi">
    <statement>
      <p permid="exers_seq_basics-e_pi-p1">
        Write out the first few terms of the sequence given by <m>a_n = n^2 - 3n + 1</m>.
        Then find a closed formula for the sequence
        (starting with <m>a_1</m>)
        <m>0, 2, 6, 12, 20, \ldots</m>.
      </p>
    </statement>
  </exercise>

  <exercise permid="exers_seq_basics-e_sa">
    <statement>
      <p permid="exers_seq_basics-e_sa-p1">
        Find a closed formula for the sequence with recursive definition
        <m>a_n = 2a_{n-1} - a_{n-2}</m> with <m>a_1 = 1</m> and <m>a_2 = 2</m>.
      </p>
    </statement>
  </exercise>

  <exercise permid="exers_seq_basics-e_vj">
    <statement>
      <p permid="exers_seq_basics-e_vj-p1">
        Find a recursive definition for the sequence with closed formula <m>a_n = 3 + 2n</m>.
        Bonus points if you can give a recursive definition in which makes use of two previous terms and no constants.
      </p>
    </statement>
  </exercise>

</exercises>
