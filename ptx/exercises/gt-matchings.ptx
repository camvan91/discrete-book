<?xml version="1.0" encoding="UTF-8"?>
<exercises permid="exers_gt-matchings" xmlns:xi="http://www.w3.org/2001/XInclude" xml:id="exercises_gt-matchings">

  <exercise permid="e_xo">
    <statement>
      <p permid="p">
        Find a matching of the bipartite graphs below or explain why no matching exists.
      </p>

      <sidebyside permid="sbs1" widths="20% 30% 40%" margins="auto" valign="bottom">

        <image permid="im1">

            <latex-image>
              \begin{tikzpicture}
              \coordinate (a) at (0,0);
              \coordinate (A) at (0,1);
              \coordinate (b) at (1,0);
              \coordinate (B) at (1,1);
              \coordinate (c) at (2,0);
              \coordinate (C) at (2,1);
              \draw (a) \v -- (B) \v -- (c) \v -- (C) \v -- (a) \v -- (A)\v -- (b) \v;
              \end{tikzpicture}
            </latex-image>
        </image>

        <image permid="im2">

            <latex-image>
              \begin{tikzpicture}
                \coordinate (a) at (0,0);
                \coordinate (A) at (0,1);
                \coordinate (b) at (1,0);
                \coordinate (B) at (1,1);
                \coordinate (c) at (2,0);
                \coordinate (C) at (2,1);
                \coordinate (d) at (3,0);
                \coordinate (D) at (3,1);
                \draw (a) \v -- (A) \v (b) \v -- (B) \v (c) \v -- (C) \v (d) \v (D)\v;
                \draw (a) -- (C) -- (b) -- (D) (A) -- (c) (A) -- (d) -- (C);
              \end{tikzpicture}
            </latex-image>
        </image>

        <image permid="im3">

            <latex-image>
              \begin{tikzpicture}
                \coordinate (a) at (0,0);
                \coordinate (A) at (0,1);
                \coordinate (b) at (1,0);
                \coordinate (B) at (1,1);
                \coordinate (c) at (2,0);
                \coordinate (C) at (2,1);
                \coordinate (d) at (3,0);
                \coordinate (D) at (3,1);
                \coordinate (e) at (4,0);
                \coordinate (E) at (4,1);
                \draw (a) \v (A) \v (b) \v (B) \v (c) \v (C) \v (d) \v (D)\v (e)\v (E) \v;
                \draw (a) -- (A) (a) -- (B) (A) -- (b) (A) -- (c) (b) -- (C) (B) -- (c) -- (D) (c) -- (E) (C) -- (d) -- (E) (D) -- (e) -- (E);
              \end{tikzpicture}
            </latex-image>
        </image>

      </sidebyside>
    </statement>
    <solution permid="s">
      <p permid="p">
        The first and third graphs have a matching, shown in bold
        (there are other matchings as well).
        The middle graph does not have a matching.
        If you look at the three circled vertices,
        you see that they only have two neighbors,
        which violates the matching condition <m>\card{N(S)} \ge \card{S}</m>
        (the three circled vertices form the set <m>S</m>).
      </p>

      <sidebyside permid="sbs2" widths="20% 30% 40%" margins="auto" valign="bottom">

        <image permid="im1">

            <latex-image>
              \begin{tikzpicture} \coordinate (a) at (0,0); \coordinate (A) at (0,1); \coordinate (b) at (1,0); \coordinate (B) at (1,1); \coordinate (c) at (2,0); \coordinate (C) at (2,1); \draw (a) \v -- (B) \v -- (c) \v -- (C) \v -- (a) \v -- (A)\v -- (b) \v; \draw[very thick] (a) -- (C) (A) -- (b) (c) -- (B); \end{tikzpicture}
            </latex-image>
        </image>

        <image permid="im2">

            <latex-image>
              \begin{tikzpicture} \coordinate (a) at (0,0); \coordinate (A) at (0,1); \coordinate (b) at (1,0); \coordinate (B) at (1,1); \coordinate (c) at (2,0); \coordinate (C) at (2,1); \coordinate (d) at (3,0); \coordinate (D) at (3,1); \draw (a) \v -- (A) \v (b) \v -- (B) \v (c) \v -- (C) \v (d) \v (D)\v; \draw (a) -- (C) -- (b) -- (D) (A) -- (c) (A) -- (d) -- (C); \draw[dashed] (a) circle (7pt) (c) circle (7pt) (d) circle (7pt); \end{tikzpicture}
            </latex-image>
        </image>

        <image permid="im3">

            <latex-image>
              \begin{tikzpicture} \coordinate (a) at (0,0); \coordinate (A) at (0,1); \coordinate (b) at (1,0); \coordinate (B) at (1,1); \coordinate (c) at (2,0); \coordinate (C) at (2,1); \coordinate (d) at (3,0); \coordinate (D) at (3,1); \coordinate (e) at (4,0); \coordinate (E) at (4,1); \draw (a) \v (A) \v (b) \v (B) \v (c) \v (C) \v (d) \v (D)\v (e)\v (E) \v; \draw (a) -- (A) (a) -- (B) (A) -- (b) (A) -- (c) (b) -- (C) (B) -- (c) -- (D) (c) -- (E) (C) -- (d) -- (E) (D) -- (e) -- (E); \draw[very thick] (a) -- (A) (b) -- (C) (c) -- (B) (d) -- (E) (e) -- (D); \end{tikzpicture}
            </latex-image>
        </image>

      </sidebyside>
    </solution>
  </exercise>

  <exercise permid="e_ag">
    <statement>
      <p permid="p1">
        A bipartite graph that doesn't have a matching might still have a
        <term>partial matching</term>.
        By this we mean a set of <em>edges</em>
        for which no vertex belongs to more than one edge
        (but possibly belongs to none).
        Every bipartite graph
        (with at least one edge)
        has a partial matching,
        so we can look for the largest partial matching in a graph.
      </p>

      <p permid="p2">
        Your <q>friend</q> claims that she has found the largest partial matching for the graph below
        (her matching is in bold).
        She explains that no other edge can be added,
        because all the edges not used in her partial matching are connected to matched vertices.
        Is she correct?
      </p>

      <sidebyside permid="sbs3" width="40%">

        <image permid="im">

            <latex-image>

        \begin{tikzpicture}
        \foreach \x in {0,...,4} {
         \coordinate (a\x) at (\x,0);
         \coordinate (b\x) at (\x,2);
         \draw (a\x) \v (b\x) \v;
         }
         \draw[line width=2pt] (a0) -- (b0) (a1) -- (b1) (a3) -- (b2) (a4) -- (b4);
         \draw[very thin] (a0) -- (b1) (a1) -- (b2) (a2)--(b0)  (a0)--(b2) (a3) -- (b4) (a4) -- (b3);
        \end{tikzpicture}
            </latex-image>
        </image>

      </sidebyside>
    </statement>
  </exercise>

  <exercise permid="e_dp">
    <statement>
      <p permid="p">
        One way you might check to see whether a partial matching is maximal is to construct an
        <term>alternating path</term>.
        This is a sequence of adjacent edges,
        which alternate between edges in the matching and edges not in the matching
        (no edge can be used more than once).
        If an alternating path starts and stops with an edge
        <em>not</em> in the matching,
        then it is called an <term>augmenting path</term>.

        <ol permid="ol">
          <li permid="l_j">
            <p permid="p">
              Find the largest possible alternating path for the partial matching of your friend's graph.
              Is it an augmenting path?
              How would this help you find a larger matching?
            </p>

            <sidebyside permid="sbs4" width="40%">

              <image permid="im">

            <latex-image>

              \begin{tikzpicture}
              \foreach \x in {0,...,4} {
               \coordinate (a\x) at (\x,0);
               \coordinate (b\x) at (\x,2);
               \draw (a\x) \v (b\x) \v;
               }
               \draw[line width=2pt] (a0) -- (b0) (a1) -- (b1) (a3) -- (b2) (a4) -- (b4);
               \draw[very thin] (a0) -- (b1) (a1) -- (b2) (a2)--(b0) (a0)--(b2) (a3) -- (b4) (a4) -- (b3);
              \end{tikzpicture}

            </latex-image>
              </image>

            </sidebyside>

          </li>

          <li permid="l_s">
            <p permid="p">
              Find the largest possible alternating path for the partial matching below.
              Are there any augmenting paths?
              Is the partial matching the largest one that exists in the graph?
            </p>

            <sidebyside permid="sbs5" width="50%">

              <image permid="im">

            <latex-image>

              \begin{tikzpicture}
              \foreach \x in {0,...,5} {
               \coordinate (a\x) at (\x,0);
               \coordinate (b\x) at (\x,2);
               \draw (a\x) \v (b\x) \v;
               }
               \draw[line width=2pt] (a0) -- (b1) (a1) -- (b2) (a2) -- (b0) (a3) -- (b4) (a4) -- (b5);
               \draw[very thin] (a0) -- (b2) (a1) -- (b0) (a2)--(b1) (a2) -- (b3) (a2) -- (b4) (a3) -- (b2) (a4) -- (b2) (a4)-- (b3) (a4) -- (b4) (a5) -- (b4) (a5)--(b5);
              \end{tikzpicture}

            </latex-image>
              </image>

            </sidebyside>

          </li>
        </ol>
      </p>
    </statement>
  </exercise>

  <exercise permid="e_gy">
    <statement>
      <p permid="p1">
        The two richest families in Westeros have decided to enter into an alliance by marriage.
        The first family has 10 sons, the second has 10 girls.
        The ages of the kids in the two families match up.
        To avoid impropriety,
        the families insist that each child must marry someone either their own age,
        or someone one position younger or older.
        In fact, the graph representing agreeable marriages looks like this:
      </p>

      <sidebyside permid="sbs6" width="90%">

        <image permid="im">

          <latex-image>
            \begin{tikzpicture}
  \foreach \x in {0,...,9} {
   \coordinate (a\x) at (\x,0);
   \coordinate (b\x) at (\x,2);
   \draw (a\x) \v -- (b\x) \v;
   }
  \draw (a0) -- (b1) -- (a2) -- (b3) -- (a4) -- (b5) -- (a6) -- (b7) -- (a8) -- (b9);
  \draw (b0) -- (a1) -- (b2) -- (a3) -- (b4) -- (a5) -- (b6) -- (a7) -- (b8) -- (a9);
  \end{tikzpicture}
          </latex-image>
        </image>

      </sidebyside>

      <p permid="p2">
        The question:
        how many different acceptable marriage arrangements which marry off all 20 children are possible?

        <ol permid="ol">
          <li permid="l_j">
            <p permid="p">
              How many marriage arrangements are possible if we insist that there are exactly 6 boys marry girls not their own age?
            </p>
          </li>

          <li permid="l_s">
            <p permid="p">
              Could you generalize the previous answer to arrive at the total number of marriage arrangements?
            </p>
          </li>

          <li permid="l_b">
            <p permid="p">
              How do you know you are correct?
              Try counting in a different way.
              Look at smaller family sizes and get a sequence.
            </p>
          </li>

          <li permid="l_k">
            <p permid="p">
              Can you give a recurrence relation that fits the problem?
            </p>
          </li>
        </ol>
      </p>
    </statement>
  </exercise>

  <exercise permid="e_jq">
    <statement>
      <p permid="p">
        We say that a set of vertices
        <m>A \subseteq V</m> is a <term>vertex cover</term>
        if every edge of the graph is incident to a vertex in the cover
        (so a vertex cover covers the <em>edges</em>).
        Since <m>V</m> itself is a vertex cover,
        every graph has a vertex cover.
        The interesting question is about finding a
        <term>minimal</term> vertex cover,
        one that uses the fewest possible number of vertices.

        <ol permid="ol">
          <li permid="l_j">
            Suppose you had a matching of a graph.
            How can you use that to get a minimal vertex cover?
            Will your method always work?
          </li>

          <li permid="l_s">
            Suppose you had a minimal vertex cover for a graph.
            How can you use that to get a partial matching?
            Will your method always work?
          </li>

          <li permid="l_b">
            What is the relationship between the size of the minimal vertex cover and the size of the maximal partial matching in a graph?
          </li>
        </ol>
      </p>
    </statement>
  </exercise>

  <exercise permid="e_mz">
    <statement>
      <p permid="p">
        For many applications of matchings,
        it makes sense to use bipartite graphs.
        You might wonder, however,
        whether there is a way to find matchings in graphs in general.

        <ol permid="ol">
          <li permid="l_j">
            For which <m>n</m> does the complete graph <m>K_n</m> have a matching?
          </li>

          <li permid="l_s">
            Prove that if a graph has a matching,
            then <m>\card{V}</m> is even.
          </li>

          <li permid="l_b">
            Is the converse true?
            That is, do all graphs with
            <m>\card{V}</m> even have a matching?
          </li>

          <li permid="l_k">
            What if we also require the matching condition?
            Prove or disprove: If a graph with an even number of vertices satisfies
            <m>\card{N(S)} \ge \card{S}</m> for all <m>S \subseteq V</m>,
            then the graph has a matching.
          </li>
        </ol>
      </p>
    </statement>
  </exercise>

</exercises>
